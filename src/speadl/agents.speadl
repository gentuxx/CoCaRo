import CoCaRo.CustomColor
import CoCaRo.agents.IRobotCore
import CoCaRo.agents.behaviour.actions.interfaces.IAgentAction
import CoCaRo.agents.behaviour.perception.interfaces.IAgentPerception
import CoCaRo.agents.behaviour.decision.interfaces.IDecisionMaker

namespace speadl.agents {
	
	ecosystem RobotsEcosystem {
		
		species Robot(identifier : String, color : 	CustomColor, cooperative : boolean) {
			provides decisionMaker : IDecisionMaker = aBehaviour.decisionMaker
			requires coreR : IRobotCore
			
			use aBehaviour : behaviour.AgentBehaviourPDA(identifier,color,cooperative){
				bind coreB to coreR	
			}
		}
		
		part behaviour : AgentBehaviour {
				
		}
	}
	
	ecosystem AgentBehaviour {
		
		species AgentBehaviourPDA(identifier : String, color : CustomColor, cooperative : boolean) {
			provides decisionMaker : IDecisionMaker = aDecision.decisionMaker
			requires coreB: IRobotCore
			
			use aPerc : perception.PerceptionCore() {
				bind core to coreB
			}
			use aAction : actions.ActionCore()
			use aDecision : decision.DecisionCore(cooperative) {
				bind core to coreB
				bind perception to aPerc.perception
				bind actions to aAction.actions
			}
		}
		
		part perception : AgentPerception {
			
		}
		
		part actions : AgentAction {
			
		}
		
		part decision : AgentDecision {
			
		}
	}
	
	ecosystem AgentPerception {
		
		species PerceptionCore() {
			requires core : IRobotCore
			provides perception : IAgentPerception
		}
	}
	
	ecosystem AgentAction {
		
		species ActionCore() {
			provides actions : IAgentAction
		}
	}
	
	ecosystem AgentDecision {
		
		species DecisionCore(cooperative : boolean) {
			requires perception : IAgentPerception
			requires actions : IAgentAction
			requires core : IRobotCore
			provides decisionMaker : IDecisionMaker
		}
	}
}