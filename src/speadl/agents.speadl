import java.agents.interfaces.IAgentAction
import java.agents.interfaces.IAgentDecisionCreator
import java.agents.interfaces.IAgentPerception
import java.environment.interfaces.IEnvironment
import java.CustomColor

namespace speadl.agents {
	
	ecosystem RobotsEcosystem {
		provides decisionCreator : IAgentDecisionCreator = behaviour.decisionCreator
		
		species Robot(identifier : String, color : 	CustomColor) {
			requires gridR : IEnvironment
			
			use aBehaviour : behaviour.AgentBehaviourPDA(){
				bind gridB to gridR
			}
		}
		
		part behaviour : AgentBehaviour {
				
		}
	}
	
	ecosystem AgentBehaviour {
		
		provides decisionCreator : IAgentDecisionCreator = decision.creator
		
		species AgentBehaviourPDA() {
			
			requires gridB: IEnvironment
			
			use aPerc : perception.PerceptionCore() {
				bind gridP to gridB
			}
			use aAction : actions.ActionCore()
			use aDecision : decision.DecisionCore() {
				bind env to gridB
				bind perception to aPerc.perception
				bind actions to aAction.actions
			}
		}
		
		part perception : AgentPerception {
			
		}
		
		part actions : AgentAction {
			
		}
		
		part decision : AgentDecision {
			
		}
	}
	
	ecosystem AgentPerception {
		
		species PerceptionCore() {
			requires gridP : IEnvironment
			provides perception : IAgentPerception
		}
	}
	
	ecosystem AgentAction {
		
		species ActionCore() {
			provides actions : IAgentAction
		}
	}
	
	ecosystem AgentDecision {
		provides creator : IAgentDecisionCreator
		
		species DecisionCore() {
			requires perception : IAgentPerception
			requires actions : IAgentAction
			requires env : IEnvironment
		}
	}
}